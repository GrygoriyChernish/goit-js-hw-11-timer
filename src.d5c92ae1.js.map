{"version":3,"sources":["index.js"],"names":["CountdownTimer","onTick","targetDate","selector","_refs","_getRefs","intervalId","isActive","_init","_bindEvents","refs","startBtn","document","querySelector","stopBtn","days","hours","mins","secs","addEventListener","_start","bind","_stop","_clearTimer","time","_getTimeComponents","startTime","setInterval","currentTime","Date","now","deltaTime","clearInterval","_pad","Math","floor","value","String","padStart","timer","updateTimerFields","textContent"],"mappings":"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","file":"src.d5c92ae1.js","sourceRoot":"../src","sourcesContent":["\nclass CountdownTimer {\n  constructor({ onTick, targetDate, selector }) {\n    this._refs = this._getRefs(selector),\n    this.intervalId = null;\n    this.isActive = false;\n    this.onTick = onTick;\n    this.targetDate = targetDate;\n    this._init();\n    this._bindEvents();\n  };\n\n  _getRefs(selector) {\n      const refs = {};\n\n      refs.startBtn = document.querySelector(`${selector} [data-action-start]`),\n      refs.stopBtn = document.querySelector(`${selector} [data-action-stop]`),\n      refs.days = document.querySelector(`${selector} [data-value=\"days\"]`),\n      refs.hours = document.querySelector(`${selector} [data-value=\"hours\"]`),\n      refs.mins = document.querySelector(`${selector} [data-value=\"mins\"]`),\n      refs.secs = document.querySelector(`${selector} [data-value=\"secs\"]`)\n    \n    return refs;\n  }\n\n  _bindEvents() {\n    this._refs.startBtn.addEventListener('click', this._start.bind(this));\n    this._refs.stopBtn.addEventListener('click', this._stop.bind(this));\n  }\n  \n  _init() {\n    this._clearTimer();\n  }\n\n  _clearTimer() {\n    const time = this._getTimeComponents(0);\n    this.onTick(time);\n  }\n\n  _start() {\n    if (this.isActive) {\n      return;\n    }\n    const startTime = this.targetDate;\n    this.isActive = true,\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = startTime - currentTime;\n      const time = this._getTimeComponents(deltaTime);\n      this.onTick(time);\n    }, 1000)\n  };\n\n  _stop() {\n    clearInterval(this.intervalId);\n    this.isActive = false;\n    this._clearTimer();\n  };\n\n  _getTimeComponents(time) {\n  const days = this._pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n  const hours = this._pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n  const mins = this._pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = this._pad(Math.floor((time % (1000 * 60)) / 1000));\n  return {days, hours, mins, secs};\n  };\n\n  _pad(value) {\n  return String(value).padStart(2, '0');\n  };\n}\n\nconst timer = new CountdownTimer({\n  onTick: updateTimerFields,\n  targetDate: new Date('Nov 29, 2020'),\n  selector: '#timer-1',\n});\n\nfunction updateTimerFields({ days, hours, mins, secs }) {\n  this._refs.days.textContent = `${days}`;\n  this._refs.hours.textContent = `${hours}`;\n  this._refs.mins.textContent = `${mins}`;\n  this._refs.secs.textContent = `${secs}`\n};\n"]}